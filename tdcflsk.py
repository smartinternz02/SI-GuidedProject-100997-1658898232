# -*- coding: utf-8 -*-
"""TDCFLSK.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p-NZ0m_uDI2UGctLcsAVzJTcqkbkMRzC
"""

#Load the required packages
import requests
import io
import string
from tensorflow.keras.preprocessing import image
from tensorflow.keras.models import load_model
import numpy as np
import pandas as pd
import tensorflow as tf
from flask import Flask
from flask import Flask,jsonify,request,render_template,redirect,url_for
import os
from werkzeug.utils import secure_filename
from tensorflow.python.keras.backend import set_session
from PIL import Image

#Step 2: Initialize the flask app and load the model
app = Flask(__name__)
model = load_model("M1.h5")
model1 = load_model("M2.h5")

#Step 3: Configure the home page
@app.route('/')
def home():
    return render_template('home.html')
#Step 4: Pre-process the frame and run
#Prediction page
@app.route('/prediction')
def prediction():
    return render_template('predict.html')
#@app.route('/predict',methods=['GET','POST'])
@app.route('/predict',methods=['POST'])
def predict():
    if request.method=='POST':
         #Get the file from post request
         f = request.files['image']
         #save the file to ./uploads
         basepath = os.path.dirname(__file__)
         file_path=os.path.join(basepath,'uploads',secure_filename(f.filename))
         f.save(file_path)
         img = image.load_img(file_path,target_size=(128,128))
         x = image.img_to_array(img)
         x = np.expand_dims(x,axis=0)
         plant = request.form['plant']
         print(plant)
         if(plant=="vegetable"):
             preds = model.predict_classes(x)
             print(preds)
             df = pd.read_excel('precautions-veg.xlsx')
             print(df.iloc[preds[0]]['caution'])
         else:
             preds = model1.predict_classes(x)
             print(preds)
             df = pd.read_excel('precautions-fruits.xlsx')
             print(df.iloc[preds[0]]['caution'])
         return df.iloc[preds[0]]['caution'] 
         # return preds
# #run the Flask application
if name == '__main__':
    app.run()